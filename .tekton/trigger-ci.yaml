---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: hello-sprint-ci 
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/pipeline: "https://raw.githubusercontent.com/sprint-cloud/pipelines/main/pipelines/flask-ci-pipeline.yaml"
    pipelinesascode.tekton.dev/task: "[https://raw.githubusercontent.com/sprint-cloud/pipelines/main/tasks/git-clone.yaml]"
    pipelinesascode.tekton.dev/task-1: "[https://raw.githubusercontent.com/sprint-cloud/pipelines/main/tasks/init-venv.yaml]"
    pipelinesascode.tekton.dev/task-2: "[https://raw.githubusercontent.com/sprint-cloud/pipelines/main/tasks/pylint.yaml]"
    pipelinesascode.tekton.dev/task-3: "[https://raw.githubusercontent.com/sprint-cloud/pipelines/main/tasks/pytest.yaml]"
    pipelinesascode.tekton.dev/task-4: "[https://raw.githubusercontent.com/sprint-cloud/pipelines/main/tasks/kaniko.yaml]"
    pipelinesascode.tekton.dev/task-5: "git-cli"
spec:
  podTemplate:
    securityContext:
      fsGroup: 65532
      runAsNonRoot: false
      #runAsUser: 1000
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: app-image
      value: "ghcr.io/sprint-cloud/hello-sprint"
    - name: app-image-tag
      value: "{{ revision }}"
    - name: app-name
      value: "hellosprint"
    - name: testing
      value: false
    - name: release-env
      value: "staging"
  pipelineRef:
    name: flask-ci-pipeline
  workspaces:
  - name: source
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: app-manifests
    volumeClaimTemplate:
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: basic-auth
    secret:
      secretName: "{{ git_auth_secret }}"
  - name: dockerconfig
    secret:
      secretName: "dockerconfig"
  - name: ssh-creds
    secret:
      secretName: ssh-creds-release
